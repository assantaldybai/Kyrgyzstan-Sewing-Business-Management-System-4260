import React, { useState } from 'react';
import { motion } from 'framer-motion';
import SafeIcon from '../../../common/SafeIcon';
import * as FiIcons from 'react-icons/fi';

const { FiUser, FiMail, FiPhone, FiArrowRight, FiArrowLeft } = FiIcons;

const TechnologistStep = ({ data, onNext, onBack }) => {
  const [formData, setFormData] = useState({
    name: data.technologist?.name || '',
    email: data.technologist?.email || '',
    phone: data.technologist?.phone || ''
  });

  const [errors, setErrors] = useState({});

  const handleSubmit = (e) => {
    e.preventDefault();
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    const newErrors = {};
    if (!formData.name.trim()) {
      newErrors.name = '–ò–º—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    }
    
    if (Object.keys(newErrors).length > 0) {
      setErrors(newErrors);
      return;
    }

    // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞–ª—å—à–µ
    onNext({ technologist: formData });
  };

  const handleChange = (field, value) => {
    setFormData(prev => ({ ...prev, [field]: value }));
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: null }));
    }
  };

  return (
    <div>
      {/* Header */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-8"
      >
        <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <SafeIcon icon={FiUser} className="w-8 h-8 text-purple-600" />
        </div>
        
        <h2 className="text-2xl font-bold text-gray-900 mb-3">
          –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–µ–≥–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∞
        </h2>
        
        <p className="text-gray-600 max-w-md mx-auto">
          –¢–µ—Ö–Ω–æ–ª–æ–≥ ‚Äî —Å–µ—Ä–¥—Ü–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞. –û–Ω –¥–µ—Ç–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–∫–∞–∑—ã, —Å–æ–∑–¥–∞–µ—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç—ã –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏.
        </p>
      </motion.div>

      {/* Form */}
      <motion.form
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2 }}
        onSubmit={handleSubmit}
        className="space-y-6"
      >
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ò–º—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∞ *
          </label>
          <div className="relative">
            <SafeIcon icon={FiUser} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
            <input
              type="text"
              value={formData.name}
              onChange={(e) => handleChange('name', e.target.value)}
              className={`w-full pl-10 pr-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${
                errors.name ? 'border-red-300' : 'border-gray-300'
              }`}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–π–∂–∞–Ω –°—ã–¥—ã–∫–æ–≤–∞"
            />
          </div>
          {errors.name && (
            <p className="text-red-500 text-sm mt-1">{errors.name}</p>
          )}
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            Email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
          </label>
          <div className="relative">
            <SafeIcon icon={FiMail} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
            <input
              type="email"
              value={formData.email}
              onChange={(e) => handleChange('email', e.target.value)}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="aizhan@example.com"
            />
          </div>
          <p className="text-sm text-gray-500 mt-1">
            –î–ª—è –±—É–¥—É—â–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º—É
          </p>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –¢–µ–ª–µ—Ñ–æ–Ω (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
          </label>
          <div className="relative">
            <SafeIcon icon={FiPhone} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
            <input
              type="tel"
              value={formData.phone}
              onChange={(e) => handleChange('phone', e.target.value)}
              className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              placeholder="+996 555 123 456"
            />
          </div>
        </div>

        {/* Info Box */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
          <h4 className="font-medium text-blue-900 mb-2">üí° –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥?</h4>
          <ul className="text-sm text-blue-700 space-y-1">
            <li>‚Ä¢ –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç—ã –¥–ª—è –Ω–æ–≤—ã—Ö –∏–∑–¥–µ–ª–∏–π</li>
            <li>‚Ä¢ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</li>
            <li>‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö</li>
            <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã</li>
          </ul>
        </div>

        {/* Navigation */}
        <div className="flex justify-between pt-6">
          <button
            type="button"
            onClick={onBack}
            className="px-6 py-3 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors flex items-center"
          >
            <SafeIcon icon={FiArrowLeft} className="w-4 h-4 mr-2" />
            –ù–∞–∑–∞–¥
          </button>
          
          <button
            type="submit"
            className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center"
          >
            –î–∞–ª–µ–µ
            <SafeIcon icon={FiArrowRight} className="w-4 h-4 ml-2" />
          </button>
        </div>
      </motion.form>
    </div>
  );
};

export default TechnologistStep;